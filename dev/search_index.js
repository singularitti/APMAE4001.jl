var documenterSearchIndex = {"docs":
[{"location":"#APMAE4001.jl-1","page":"Home","title":"APMAE4001.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"This is the repo containing numerical algorithms I implement when studying the course APMA E4001.","category":"page"},{"location":"#Manual-Outline-1","page":"Home","title":"Manual Outline","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\n    \"LUFactorization/Doolittle.md\"\n]\nDepth = 3","category":"page"},{"location":"#main-index-1","page":"Home","title":"Index","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"LUFactorization/Doolittle/#Doolittle-algorithm-1","page":"LU Factorization","title":"Doolittle algorithm","text":"","category":"section"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"CurrentModule = APMAE4001.LUFactorization.Doolittle","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"We are solving a linear equation","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"mathrm A  mathbf x  = mathbf b ","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"where \\mathrm{ A } is an n \\times n matrix. Turn it into an equivalent form","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"mathrm U  mathbf x  = mathbf c ","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"where \\mathrm{ U } is an upper triangular matrix.","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"For the kth step, we have an elimination matrix \\mathrm{ E }_k, so","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"mathrm U  = mathrm E _n - 1 cdots mathrm E_2 E_1  mathrm A  equiv mathrm E A ","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"where \\mathrm{ E } = \\mathrm{ E }_{n - 1} \\cdots \\mathrm{ E_2 E_1 }. Thus we have n - 1 steps in total. We denote here","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"mathrm A _k = mathrm E _k mathrm A _k - 1","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"Thus the final step will be \\mathrm{ A }_{n - 1} = \\mathrm{ E }_{n - 1} \\mathrm{ A }_{n - 2} = \\mathrm{ U }.","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"So","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"mathrm A  = mathrm E ^-1 mathrm U  = (mathrm E _n - 1 cdots mathrm E_2 E_1 )^-1 mathrm U  = mathrm E ^-1_1 mathrm E ^-1_2 cdots mathrm E ^-1_n - 1 mathrm U  = mathrm L _1 mathrm L _2 cdots mathrm L _n - 1 mathrm U  equiv mathrm L  mathrm U ","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"where \\mathrm{ L } = \\mathrm{ L }_1 \\mathrm{ L }_2 \\cdots \\mathrm{ L }_{n - 1}.","category":"page"},{"location":"LUFactorization/Doolittle/#","page":"LU Factorization","title":"LU Factorization","text":"elimination_factors(n::Int, k::Int, A::AbstractMatrix)\n\ngeneral_elementary_elimination_matrix(lk::AbstractVector, ek::AbstractVector)\n\ndoolittle_lu(A::AbstractMatrix; include_l::Bool=true, include_e::Bool=false)","category":"page"},{"location":"LUFactorization/Doolittle/#APMAE4001.LUFactorization.Doolittle.elimination_factors-Tuple{Int64,Int64,AbstractArray{T,2} where T}","page":"LU Factorization","title":"APMAE4001.LUFactorization.Doolittle.elimination_factors","text":"elimination_factors(n::Int, k::Int, A::AbstractMatrix)\n\nGenerate a vector of factors to eliminate the kth column. Combine this function with row_vector to to generate an general elementary elimination matrix.\n\nArguments\n\nn::Integer: the size of the matrix A.\nk::Integer: the step count in the elimination process. It must satisfies 1 ≤ k ≤ n - 1.\nA::AbstractMatrix: the matrix from (k - 1)th step of the elimination process.\n\n\n\n\n\n","category":"method"},{"location":"LUFactorization/Doolittle/#APMAE4001.LUFactorization.Doolittle.general_elementary_elimination_matrix-Tuple{AbstractArray{T,1} where T,AbstractArray{T,1} where T}","page":"LU Factorization","title":"APMAE4001.LUFactorization.Doolittle.general_elementary_elimination_matrix","text":"general_elementary_elimination_matrix(lk::AbstractVector, ek::AbstractVector)\n\nElimination matrix E_k do row operations to eliminate the kth column.\n\n\n\n\n\n","category":"method"},{"location":"LUFactorization/Doolittle/#APMAE4001.LUFactorization.Doolittle.doolittle_lu-Tuple{AbstractArray{T,2} where T}","page":"LU Factorization","title":"APMAE4001.LUFactorization.Doolittle.doolittle_lu","text":"doolittle_lu(A::AbstractMatrix; include_l::Bool=true, include_e::Bool=false)\n\nReferenced from Wikipedia \"LU decomposition\" page.\n\n\n\n\n\n","category":"method"}]
}
